@model CreateSaleViewModel
@{
    ViewBag.Title = "Realizar venta";
}

<div class="page-title">
    <a href="@Url.Action("Index", "Sales")" class="btn btn-link">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span> Regresar
    </a>
    <h2> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> @ViewBag.Title</h2>
</div>
<ol class="breadcrumb">
    <li>@Html.ActionLink("Inicio", "Index", "Home")</li>
    <li>@Html.ActionLink("Ventas", "Index", "Sales")</li>
    <li class="active">@ViewBag.Title</li>
</ol>

@{ Html.RenderPartial("_ResultMessage"); }

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Información de venta</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("CreateSale", "Sales", FormMethod.Post, new { id = "CreateSaleForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ClientId)
                    @Html.DropDownListFor(m => m.ClientId, Model.ClientsList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ClientId, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Observation)
                    @Html.TextAreaFor(m => m.Observation, new { @class = "form-control", rows = "3" })
                    @Html.ValidationMessageFor(m => m.Observation, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(m => m.IsHomeDelivery)
                    @Html.CheckBoxFor(m => m.IsHomeDelivery, new { @class = "checkbox" })
                    @Html.ValidationMessageFor(m => m.IsHomeDelivery, null, new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(m => m.IsPaymentCompleted)
                    @Html.CheckBoxFor(m => m.IsPaymentCompleted, new { @class = "checkbox" })
                    @Html.ValidationMessageFor(m => m.IsPaymentCompleted, null, new { @class = "text-danger" })
                </div>
            </div>

            <hr />

            <div class="add-sale-product">
                <h4><span class="glyphicon glyphicon-inbox"></span> Listado de productos</h4>

                <div class="row sale-product">
                    <div class="form-group col-lg-5">
                        @Html.Label("Producto")
                        @Html.DropDownList("ProductInput", Model.ProductsList, null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-lg-2">
                        @Html.Label("Cantidad")
                        @Html.TextBox("QuantityInput", null, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="form-group col-lg-2">
                        @Html.Label("Discount")
                        @Html.TextBox("DiscountInput", null, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="action-buttons col-lg-3">
                        <button id="AddSaleProduct" type="button" class="btn btn-success">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </div>
                </div>
            </div>

            <div id="SaleProductsList" class="sale-products-list">
                <div class="row sale-product">
                    <div class="form-group col-lg-5">
                        @Html.Label("Producto")
                        @Html.TextBox("ProductId", null, new { @class = "form-control", disabled = "true" })
                    </div>
                    <div class="form-group col-lg-2">
                        @Html.Label("Cantidad")
                        @Html.TextBox("Quantity", null, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="form-group col-lg-2">
                        @Html.Label("Descuento")
                        @Html.TextBox("Discount", null, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="form-group col-lg-1">
                        @Html.Label("Precio")
                        @Html.TextBox("Discount", "$5.5", new { @class = "form-control", disabled = "true" })
                    </div>
                    <div class="form-group col-lg-1">
                        @Html.Label("Total")
                        @Html.TextBox("Discount", "$5.5", new { @class = "form-control", disabled = "true" })
                    </div>
                    <div class="action-buttons col-lg-1">
                        <button class="btn btn-danger">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="panel-footer text-center">
        <button class="btn btn-success" form="CreateSaleForm">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Crear
        </button>
        <button type="reset" class="btn btn-default" form="CreateSaleForm">
            <span class="glyphicon glyphicon-erase" aria-hidden="true"></span> Limpiar
        </button>
    </div>
</div>

@section scripts
{
    <script>
        var addSaleProductButton = $("#AddSaleProduct");
        var saleProductsList = $("#SaleProductsList");
        var createSaleForm = $("#CreateSaleForm");

        addSaleProductButton.on('click', function () {
            var productId = createSaleForm.find('[name = "ProductInput"]').val();
            var quantity = createSaleForm.find('[name = "QuantityInput"]').val();
            var discount = createSaleForm.find('[name = "DiscountInput"]').val();

            var saleProductElement = createSaleProductElement(productId, quantity, discount);
            saleProductsList.append(saleProductElement);
        });

        function createSaleProductElement(productId, quantity, discount) {
            var saleProductElement = $(`
                <div class="row sale-product">
                    <div class="form-group col-lg-5">
			            <label>Producto</label>
                        <input name="ProductId" type="text" class="form-control" disabled="true" value="${productId}" />
                    </div>
                    <div class="form-group col-lg-2">
                        <label>Cantidad</label>
                        <input name="Quantity" type="number" class="form-control" value="${quantity}" />
                    </div>
                    <div class="form-group col-lg-2">
                        <label>Descuento</label>
                        <input name="Discount" type="number" class="form-control" value="${discount}" />
                    </div>
                    <div class="form-group col-lg-1">
                        <label>Precio</label>
                        <input type="number" class="form-control" disabled="true" />
                    </div>
                    <div class="form-group col-lg-1">
                        <label>Total</label>
                        <input type="number" class="form-control" disabled="true" />
                    </div>
                    <div class="action-buttons col-lg-1">
                        <button class="btn btn-danger">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                    </div>
                </div>
            `);

            return saleProductElement;
        }
    </script>
}