@Styles.Render("~/Content/jquery-confirm")
@Scripts.Render("~/bundles/jquery-confirm")

<script>

    var addSaleProductButton = $("#AddSaleProduct");
    var saleProductsList = $("#SaleProductsList");
    var createSaleForm = $("#CreateSaleForm");

    // Sale details information
    var taxesPercentage = 0.13;
    var saleDetails = [];

    addSaleProductButton.on('click', addProductSale);

    function addProductSale() {
        var productId = createSaleForm.find('[name = "ProductInput"]').val();
        var quantity = createSaleForm.find('[name = "QuantityInput"]').val();
        var discount = createSaleForm.find('[name = "DiscountInput"]').val() || 0;

        if (!isValidData(productId, quantity, discount)) {
            return;
        }

        getProductData(productId, function (productData) {
            if (quantity > productData.Stock) {
                showErrorMessage("La cantidad no puede ser mayor a las existencias del producto. Existencias: " + productData.Stock);
                return;
            }

            if (discount > productData.Price) {
                showErrorMessage("El descuento no puede ser mayor al precio del producto. Precio actual: $" + productData.Price);
                return;
            }

            var saleDetail = {
                id: productData.Id,
                productName: productData.Name,
                unitTypeName: productData.UnitTypeName,
                quantity: quantity,
                price: productData.Price,
                discount: discount,
                newPrice: productData.Price - discount,
                total: (productData.Price - discount) * quantity
            };

            saleDetails.push(saleDetail);

            updateSaleDetailsElements();
        });
    }

    function isValidData(productId, quantity, discount) {
        // Validate existence
        if (!productId) {
            showErrorMessage("Debe seleccionar un producto.")
            return false;
        }

        if (!quantity) {
            showErrorMessage("Debe colocar la cantidad a vender.")
            return false;
        }

        var searchSaleProductById = $("#ProductSale-" + productId);

        if (searchSaleProductById.length > 0) {
            showErrorMessage("El producto que ha seleccionado ya existe en la lista.")
            return false;
        }

        // Reject negative values
        if (quantity < 0) {
            showErrorMessage("La cantidad no puede ser negativa.")
            return false;
        }

        if (discount < 0) {
            showErrorMessage("El descuento no puede ser negativo.")
            return false;
        }

        return true;
    }

    function getProductData(productId, callback) {
        var url = "@Url.Action("GetProductById", "Data")";

        $.ajax({
            url,
            data: { id: productId },
            type: 'GET',
            dataType: 'json',
            error: function (error) {
                showErrorMessage("El producto que ha seleccionado no existe.")
            },
            success: callback
        })
    }

    function updateSaleDetailsElements() {
        saleProductsList.empty();

        $.each(saleDetails, function (index, saleDetail) {
            var saleProductElement = createSaleProductElement(saleDetail);
            saleProductsList.append(saleProductElement);
        });
    }

    function createSaleProductElement(saleDetail) {
        var saleProductElement = $(`
            <div id="ProductSale-${saleDetail.id}" class="row sale-product">
                <div class="form-group col-lg-5">
                    <input type="hidden" name="SaleProductsList.ProductId[]" value="${saleDetail.id}" />
                    <input type="text" class="form-control" value="${saleDetail.id}. ${saleDetail.productName} - ${saleDetail.unitTypeName}" disabled />
                </div>
                <div class="form-group col-lg-2">
                    <input type="hidden" name="SaleProductsList.Quantity[]" value="${saleDetail.quantity}" />
                    <input type="text" class="form-control" value="${parseFloat(saleDetail.quantity).toFixed(2)}" disabled />
                </div>
                <div class="form-group col-lg-1">
                    <input type="text" class="form-control" disabled="true" value="$${parseFloat(saleDetail.price).toFixed(2)}" />
                </div>
                <div class="form-group col-lg-1">
                    <input type="hidden" name="SaleProductsList.Discount[]" value="${saleDetail.discount}" />
                    <input type="text" class="form-control" value="$${parseFloat(saleDetail.discount).toFixed(2)}" disabled />
                </div>
                <div class="form-group col-lg-1">
                    <input type="text" class="form-control" disabled="true" value="$${parseFloat(saleDetail.newPrice).toFixed(2)}" />
                </div>
                <div class="form-group col-lg-1">
                    <input type="text" class="form-control" disabled="true" value="$${parseFloat(saleDetail.total).toFixed(2)}" />
                </div>
                <div class="action-buttons col-lg-1">
                    <button type="button" class="btn btn-danger" onclick="confirmSaleProductDeletion(${saleDetail.id})">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                </div>
            </div>
        `);

        return saleProductElement;
    }

    function confirmSaleProductDeletion(productId) {
        $.confirm({
            icon: 'glyphicon glyphicon-trash',
            title: '¿Está seguro?',
            content: 'Se removerá del listado de productos de la venta.',
            type: 'red',
            backgroundDismiss: true,
            buttons: {
                confirm: {
                    text: 'Si, remover',
                    btnClass: 'btn btn-danger',
                    action: function () {
                        removeSaleProductById(productId);
                    }
                },
                cancel: {
                    text: 'Cancelar',
                    btnClass: 'btn btn-default',
                }
            },
            closeIcon: true,
        })
    }

    function removeSaleProductById(productId) {
        var saleProductElement = $("#ProductSale-" + productId);

        if (saleProductElement.length == 0) {
            showErrorMessage("El producto que desea borrar no existe.");
        }

        if (saleProductsList.children(".sale-product").length == 1) {
            var emptyListElement = $('<p class="empty-list text-muted text-center">Sin productos agregados</p>');

            saleProductsList.append(emptyListElement);
        }

        saleProductElement.remove();
    }

    function showErrorMessage(message) {
        $.alert({
            icon: 'glyphicon glyphicon-exclamation-sign',
            title: 'Error!',
            content: message,
            type: 'red',
            backgroundDismiss: true
        });
    }

</script>