@model List<SaleViewModel>
@{
    ViewBag.Title = "Ventas";
}

<div class="page-title">
    <h2><span class="glyphicon glyphicon-shopping-cart"></span> @ViewBag.Title</h2>
    <a href="@Url.Action("CreateSale", "Sales")" class="btn btn-success">
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Agregar venta
    </a>
</div>
<ol class="breadcrumb">
    <li>@Html.ActionLink("Inicio", "Index", "Home")</li>
    <li class="active">@ViewBag.Title</li>
</ol>

@{ Html.RenderPartial("_ResultMessage"); }

<div class="row">
    <div class="col-lg-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Ventas mensuales</h3>
            </div>
            <canvas id="MonthlySales"></canvas>
        </div>
    </div>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Ventas realizadas</h3>
    </div>
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Nombres</th>
                    <th>Apellidos</th>
                    <th>Cantidad de productos</th>
                    <th>Total</th>
                    <th>Tipo de entrega</th>
                    <th>Estado de pago</th>
                    <th>Fecha de venta</th>
                    <th>Fecha de entrega</th>
                    <th>Estado de venta</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sale in Model)
                {
                    <tr>
                        <td>@sale.Id</td>
                        <td>@sale.ClientFirstName</td>
                        <td>@sale.ClientLastName</td>
                        <td>@sale.SaleDetailsQuantity</td>
                        <td>$@sale.SaleDetailsTotal</td>
                        <td>@(sale.IsHomeDelivery ? "A domicilio" : "En local")</td>
                        <td>
                            <span class="label @(sale.IsPaymentCompleted ? "label-success" : "label-danger")">
                                @(sale.IsPaymentCompleted ? "Pagado" : "No pagado")
                            </span>
                        </td>
                        <td>@sale.SaleDate</td>
                        <td class="@(sale.DeliveryDate is null ? "text-bold" : "")">
                            @(sale.DeliveryDate is null ? "[Sin fecha]" : sale.DeliveryDate.ToString())
                        </td>
                        <td>
                            <span class="label @(sale.IsCompleted ? "label-success" : "label-default")">
                                @(sale.IsCompleted ? "Completado" : "Pendiente")
                            </span>
                        </td>
                        <td>
                            <div class="btn-group action-buttons" role="group" aria-label="Action buttons">
                                <a href="@Url.Action("CreateInvoice", "Sales", new { id = sale.Id })" target="_blank" class="btn btn-success">
                                    <span class="glyphicon glyphicon-save-file"></span>
                                </a>
                                <a href="@Url.Action("ViewSale", "Sales", new { id = sale.Id })" class="btn btn-primary">
                                    <span class="glyphicon glyphicon-eye-open"></span>
                                </a>
                                <a href="#" class="btn btn-warning">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                </a>
                                <button form="DeleteSale-@(sale.Id)" class="btn btn-danger">
                                    <span class="glyphicon glyphicon-trash"></span>
                                </button>
                                @using (Html.BeginForm("DeleteSale", "Sales", FormMethod.Post,
                                    new { id = "DeleteSale-" + sale.Id, @class = "delete-sale-button" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("Id", sale.Id)
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts {
    @{ Html.RenderPartial("Partials/_DeleteSaleScripts"); }

    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.2.1/dist/chart.umd.min.js"></script>

    <script>
        getSalesCountPerMonth(function (data) {
            var labels = [];
            var counts = [];

            console.log(data);

            $.each(data, function (index, monthData) {
                labels.push(monthData.Year + "/" + monthData.Month);
                counts.push(monthData.Count);
            });

            createChart(labels, counts);
        });

        function getSalesCountPerMonth(callback) {
            var url = "@Url.Action("GetSalesCountPerMonth", "Data")";

            $.ajax({
                url,
                type: 'GET',
                dataType: 'json',
                error: function (error) {
                    showErrorMessage("No se pudo obtener las ventas mensuales.")
                },
                success: callback
            })
        }

        function createChart(labels, counts) {
            const monthlySalesCanvas = document.getElementById('MonthlySales');

            new Chart(monthlySalesCanvas, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'N° de ventas',
                        data: counts,
                        //backgroundColor: 'rgba(57, 188, 157, 0.5)',
                        borderWidth: 1,
                        //borderColor: 'rgb(57, 188, 157)'
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
}